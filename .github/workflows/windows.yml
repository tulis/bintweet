name: windows-compile

on:
    push:
    workflow_dispatch:

jobs:
    run:
        env:
            GO111MODULE: on
            GOPATH: "C:\\hostedtoolcache\\windows\\go"
        name: windows-compile
        runs-on: windows-latest
        steps:
            # - name: Set up Go 1.15
            #   uses: actions/setup-go@v2
            #   with:
            #       go-version: ^1.15

            - name: Get GOPATH
              run: (Get-Command go).Path

            - name: Checkout bintweet repository
              uses: actions/checkout@v2

            - name: set GO111MODULE=on
              run: set GO111MODULE=on

            - name: Setup go-task
              run: go get -u github.com/go-task/task/v3/cmd/task

            - name: Verify go-task is installed
              run: "& \"$env:GOPATH\\bin\\task\" --version"

            - uses: actions/setup-python@v2
              with:
                  python-version: "3.8"

            - name: Setup poetry
              uses: Gr1N/setup-poetry@v4

            - name: Restore packages
              run: poetry install

            - name: Run app
              run: |
                  poetry run python3 src/bintweet `
                    $env:CONSUMER_KEY `
                    $env:CONSUMER_SECRET `
                    $env:ACCESS_TOKEN `
                    $env:ACCESS_TOKEN_SECRET `
                    $env:BEARER_TOKEN
              env:
                  CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
                  CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
                  ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
                  ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
                  BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}

            # - name: Run bintweet
            #   run: "& \"$env:GOPATH\\bin\\task\" run"
            #   env:
            #       CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
            #       CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
            #       ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
            #       ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
            #       BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
